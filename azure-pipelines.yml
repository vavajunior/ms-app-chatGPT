trigger:
- main  # or your desired branch

variables:
  - group: normatizai-prod
  - group: normatizai-deploy-prd
  - name: json_file
    value: app_settings.json

stages:
- stage: DeployWebApp
  displayName: 'Azure Web App Deployment'
  jobs:
  - job: ConfigureCLI
    displayName: 'Configure Azure CLI with Preview Extensions'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Enable dynamic install of extensions'
      inputs:
        azureSubscription: "ServiceConnection_BigData-NORMATIZAI"
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az config set extension.dynamic_install_allow_preview=true
          az extension add --name authV2 --yes
          az version
  - job: CreateWebApp
    displayName: 'Create Azure Web App'
    dependsOn: ConfigureCLI
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Create Web App'
      inputs:
        azureSubscription: "ServiceConnection_BigData-NORMATIZAI"
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az webapp create \
            --resource-group $(RESOURCE_GROUP) \
            --name $(APP_NAME) \
            --plan $(APP_SERVICE_PLAN) \
            --runtime "PYTHON|3.11" \
            --https-only true \
            --debug

  - job: SetStartupCommand
    displayName: 'Set Startup Command'
    dependsOn: CreateWebApp
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Configure Startup File'
      inputs:
        azureSubscription: "ServiceConnection_BigData-NORMATIZAI"
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az webapp config set \
            --resource-group $(RESOURCE_GROUP) \
            --name $(APP_NAME) \
            --startup-file "gunicorn --bind=0.0.0.0:8000 --timeout 600 app:app" \
            --debug

  # - job: ConfigureAuthentication
  #   displayName: 'Configure Microsoft Auth'
  #   dependsOn: SetStartupCommand
  #   pool:
  #     vmImage: 'ubuntu-latest'
  #   steps:
  #   - task: AzureCLI@2
  #     displayName: 'Set Auth Microsoft Identity'
  #     inputs:
  #       azureSubscription: "ServiceConnection_BigData-NORMATIZAI"
  #       scriptType: 'bash'
  #       scriptLocation: 'inlineScript'
  #       inlineScript: |
  #         az webapp auth microsoft update \
  #           --resource-group $(RESOURCE_GROUP) \
  #           --name $(APP_NAME) \
  #           --client-id $(CLIENT_ID) \
  #           --client-secret $(CLIENT_SECRET) \
  #           --issuer https://sts.windows.net/$(TENANT_ID)/ \
  #           --debug

  - job: ZipAppCode
    displayName: 'Zip Application Code'
    dependsOn: SetStartupCommand
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: ArchiveFiles@2
        displayName: 'Zip source code'
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)'  # ajuste para o caminho correto do seu projeto
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/normatizai.zip'
          replaceExistingArchive: true

      - publish: '$(Build.ArtifactStagingDirectory)/normatizai.zip'
        artifact: zippedApp

  - job: DeployAppCode
    displayName: 'Deploy Application Code'
    dependsOn: ZipAppCode
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: zippedApp
    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'ServiceConnection_BigData-NORMATIZAI'
        appType: 'webAppLinux'
        appName: '$(APP_NAME)'
        package: '$(Pipeline.Workspace)/zippedApp/normatizai.zip'
        appSettings: |
          -SCM_DO_BUILD_DURING_DEPLOYMENT true
          -AUTH_CLIENT_SECRET $(AUTH_CLIENT_SECRET) 
          -AZURE_COSMOSDB_ACCOUNT $(AZURE_COSMOSDB_ACCOUNT) 
          -AZURE_COSMOSDB_ACCOUNT_KEY $(AZURE_COSMOSDB_ACCOUNT_KEY) 
          -AZURE_COSMOSDB_CONVERSATIONS_CONTAINER $(AZURE_COSMOSDB_CONVERSATIONS_CONTAINER) 
          -AZURE_COSMOSDB_DATABASE $(AZURE_COSMOSDB_DATABASE) 
          -AZURE_COSMOSDB_ENABLE_FEEDBACK $(AZURE_COSMOSDB_ENABLE_FEEDBACK) 
          -AZURE_COSMOSDB_MONGO_VCORE_TITLE_COLUMN $(AZURE_COSMOSDB_MONGO_VCORE_TITLE_COLUMN) 
          -AZURE_OPENAI_EMBEDDING_NAME $(AZURE_OPENAI_EMBEDDING_NAME) 
          -AZURE_OPENAI_ENDPOINT $(AZURE_OPENAI_ENDPOINT) 
          -AZURE_OPENAI_KEY $(AZURE_OPENAI_KEY) 
          -AZURE_OPENAI_MAX_TOKENS $(AZURE_OPENAI_MAX_TOKENS) 
          -AZURE_OPENAI_MODEL $(AZURE_OPENAI_MODEL) 
          -AZURE_OPENAI_MODEL_NAME $(AZURE_OPENAI_MODEL_NAME) 
          -AZURE_OPENAI_RESOURCE $(AZURE_OPENAI_RESOURCE) 
          -AZURE_OPENAI_SYSTEM_MESSAGE $(AZURE_OPENAI_SYSTEM_MESSAGE) 
          -AZURE_OPENAI_TEMPERATURE $(AZURE_OPENAI_TEMPERATURE) 
          -AZURE_OPENAI_TOP_P $(AZURE_OPENAI_TOP_P) 
          -AZURE_SEARCH_ENABLE_IN_DOMAIN $(AZURE_SEARCH_ENABLE_IN_DOMAIN) 
          -AZURE_SEARCH_FILENAME_COLUMN $(AZURE_SEARCH_FILENAME_COLUMN) 
          -AZURE_SEARCH_INDEX $(AZURE_SEARCH_INDEX) 
          -AZURE_SEARCH_KEY $(AZURE_SEARCH_KEY) 
          -AZURE_SEARCH_QUERY_TYPE $(AZURE_SEARCH_QUERY_TYPE) 
          -AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG $(AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG) 
          -AZURE_SEARCH_SERVICE $(AZURE_SEARCH_SERVICE) 
          -AZURE_SEARCH_STRICTNESS $(AZURE_SEARCH_STRICTNESS) 
          -AZURE_SEARCH_TOP_K $(AZURE_SEARCH_TOP_K) 
          -AZURE_SEARCH_USE_SEMANTIC_SEARCH $(AZURE_SEARCH_USE_SEMANTIC_SEARCH) 
          -AZURE_SEARCH_VECTOR_COLUMNS $(AZURE_SEARCH_VECTOR_COLUMNS) 
          -AZURE_STORAGE_ACCOUNT_CONTAINER $(AZURE_STORAGE_ACCOUNT_CONTAINER) 
          -AZURE_STORAGE_ACCOUNT_KEY $(AZURE_STORAGE_ACCOUNT_KEY) 
          -AZURE_STORAGE_ACCOUNT_NAME $(AZURE_STORAGE_ACCOUNT_NAME) 
          -DATASOURCE_TYPE $(DATASOURCE_TYPE) 
          -SCM_DO_BUILD_DURING_DEPLOYMENT $(SCM_DO_BUILD_DURING_DEPLOYMENT) 
          -UI_CHAT_DESCRIPTION $(UI_CHAT_DESCRIPTION) 
          -UI_CHAT_LOGO $(UI_CHAT_LOGO) 
          -UI_CHAT_LOGO_FOOTER $(UI_CHAT_LOGO_FOOTER) 
          -UI_CHAT_TITLE $(UI_CHAT_TITLE) 
          -UI_FAVICON $(UI_FAVICON) 
          -UI_LOGO $(UI_LOGO) 
          -UI_SHOW_SHARE_BUTTON $(UI_SHOW_SHARE_BUTTON) 
          -UI_TITLE $(UI_TITLE) 
          -UI_TITLE_FOOTER $(UI_TITLE_FOOTER) 
          -WEBSITE_HTTPLOGGING_RETENTION_DAYS $(WEBSITE_HTTPLOGGING_RETENTION_DAYS) 
      
  - job: RestartAppService
    displayName: 'Restart Azure App Service'
    dependsOn: DeployAppCode  # garante que s√≥ roda depois do deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'ServiceConnection_BigData-NORMATIZAI'  # seu service connection
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az webapp restart --name $(APP_NAME) --resource-group $(RESOURCE_GROUP)
